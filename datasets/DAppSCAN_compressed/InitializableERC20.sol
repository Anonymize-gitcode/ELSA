pragma solidity 0.6.9;

contract InitializableERC20 { using SafeMath for uint256; string public name; uint256 public decimals; string public symbol; uint256 public totalSupply; bool public initialized; mapping(address => uint256) balances; mapping(address => mapping(address => uint256)) internal allowed; event Transfer(address indexed from, address indexed to, uint256 amount); event Approval(address indexed owner, address indexed spender, uint256 amount); function init( address _creator, uint256 _totalSupply, string memory _name, string memory _symbol, uint256 _decimals ) public { require(!initialized, "TOKEN_INITIALIZED"); initialized = true; totalSupply = _totalSupply; balances[_creator] = _totalSupply; name = _name; symbol = _symbol; decimals = _decimals; emit Transfer(address(0), _creator, _totalSupply); }